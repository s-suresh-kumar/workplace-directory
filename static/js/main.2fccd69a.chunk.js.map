{"version":3,"sources":["logo.svg","util/API.js","components/Header.js","components/RowEmployeeEntry.js","components/SortedEmployeeDirectory.js","components/FilteredEmployeeDirectory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","get","QUERYURL","Header","className","RowEmployeeEntry","props","alt","email","src","imageUrl","firstName","lastName","phoneNumber","dateOfBirth","SortedEmployeeDirectory","state","sortByName","sortByDob","sortedEmployeeDirectory","doSortByDOB","sortedEmp","empDir","sort","a","b","dobX","Date","dob","date","dobY","setState","sortedEmployees","doSortByName","nameLeft","name","last","toLowerCase","nameRight","console","log","this","length","lastProps","onClick","scope","map","elem","index","key","age","Math","random","picture","thumbnail","first","split","phone","React","Component","FilteredEmployeeDirectory","searchEmp","filteredEmployeeDirectory","handleInputChange","event","target","value","searchVal","filteredList","employeeDirEntries","filter","item","title","indexOf","onChange","type","placeholder","App","API","then","response","data","results","catch","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2fccd69a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\r\nconst country = 'us';\r\nconst numResults = 200;\r\nconst QUERYURL = \"https://randomuser.me/api/?results=\";\r\n\r\n\r\nexport default {\r\n  getRandomUsers: function () {\r\n    return axios.get(QUERYURL + numResults + '&nat' + country);\r\n  }\r\n};","import React from \"react\";\nimport \"./header.css\";\n\nfunction Header() {\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        Company Employee Directory\n    </div>\n      <br></br>\n      <div className=\"sub-heading\">\n        Click on Name/DOB to sort or use search box to narrow your results\n    </div>\n    </div>\n\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\n\nfunction RowEmployeeEntry(props) {\n  return (\n    <Tr>\n      <Td >{<img alt={props.email} src={props.imageUrl}></img>}</Td>\n      <Td> {props.firstName} {props.lastName}</Td>\n      <Td>{props.phoneNumber}</Td>\n      <Td>{props.email}</Td>\n      <Td>{props.dateOfBirth}</Td>\n    </Tr>\n\n  );\n}\n\nexport default RowEmployeeEntry;","import React from \"react\";\nimport \"./sortedEmployeeDirectory.css\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\nimport RowEmployeeEntry from './RowEmployeeEntry.js'\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\n\nclass SortedEmployeeDirectory extends React.Component {\n\n  state = {\n    sortByName: true,\n    sortByDob: true,\n    sortedEmployeeDirectory: []\n  }\n\n  componentDidMount() {\n    console.log('SortedEmployeeDirectory::CDM', this.props.empDir.length)\n    console.log('SortedEmployeeDirectory::CDM', this.props.empDir)\n    if (this.state.sortedEmployeeDirectory.length < 1) {\n      this.setState({\n        sortedEmployeeDirectory: this.props.empDir\n      })\n    }\n  }\n\n  componentDidUpdate(lastProps) {\n    console.log('SortedEmployeeDirectory::CDU', this.props.empDir.length)\n    console.log('SortedEmployeeDirectory::CDU', this.props.empDir)\n    if (this.props.empDir !== lastProps.empDir) {\n      this.setState({\n        sortedEmployeeDirectory: this.props.empDir\n      })\n    }\n  }\n\n  doSortByDOB = () => {\n    let sortedEmp = [];\n    if (this.state.sortByDob) {\n      sortedEmp = this.props.empDir.sort((a, b) => {\n        const dobX = new Date(a.dob.date), dobY = new Date(b.dob.date);\n        if (dobX < dobY)\n          return -1\n        if (dobX > dobY)\n          return 1\n        return 0\n      })\n    } else {\n      sortedEmp = this.props.empDir.sort((a, b) => {\n        const dobX = new Date(a.dob.date), dobY = new Date(b.dob.date);\n        if (dobX > dobY)\n          return -1\n        if (dobX < dobY)\n          return 1\n        return 0\n      })\n    }\n    this.setState({\n      sortByDob: !this.state.sortByDob,\n      sortedEmployees: sortedEmp\n\n    })\n  }\n\n  doSortByName = () => {\n    let sortedEmp = [];\n    if (this.state.sortByName) {\n      sortedEmp = this.props.empDir.sort((a, b) => {\n        const nameLeft = a.name.last.toLowerCase(), nameRight = b.name.last.toLowerCase();\n        if (nameLeft < nameRight)\n          return -1;\n        if (nameLeft > nameRight)\n          return 1;\n        return 0;\n      })\n    } else {\n      sortedEmp = this.props.empDir.sort((a, b) => {\n        const nameLeft = a.name.last.toLowerCase(), nameRight = b.name.last.toLowerCase();\n        if (nameLeft > nameRight)\n          return -1;\n        if (nameLeft < nameRight)\n          return 1;\n        return 0;\n      })\n    }\n    this.setState({\n      sortByName: !this.state.sortByName,\n      sortedEmployeeDirectory: sortedEmp\n\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container-md\">\n        <Table>\n          <Thead>\n            <Tr>\n              <Th>Image</Th>\n              <Th onClick={this.doSortByName} className=\"cur-pointer\" scope=\"col\">Name</Th>\n              <Th>Phone</Th>\n              <Th>Email</Th>\n              <Th onClick={this.doSortByDOB} className=\"cur-pointer\" scope=\"col\">DOB</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {\n              (this.state.sortedEmployeeDirectory.length > 0) &&\n\n              this.state.sortedEmployeeDirectory.map((elem, index) => (\n\n                <RowEmployeeEntry\n                  key={elem.dob.age * Math.random()}\n                  imageUrl={elem.picture.thumbnail}\n                  firstName={elem.name.first}\n                  lastName={elem.name.last}\n                  dateOfBirth={elem.dob.date.split('T')[0]}\n                  phoneNumber={elem.phone}\n                  email={elem.email}\n                />\n              ))\n            }\n          </Tbody>\n        </Table >\n      </div >\n    );\n  }\n}\n\nexport default SortedEmployeeDirectory;","import React from \"react\";\nimport \"./filteredEmployeeDirectory.css\";\nimport SortedEmployeeDirectory from './SortedEmployeeDirectory';\n\nclass FilteredEmployeeDirectory extends React.Component {\n\n  state = {\n    searchEmp: \"\",\n    filteredEmployeeDirectory: []\n  };\n\n  componentDidMount() {\n    // console.log('FilteredEmployeeDirectory::length', this.props.employeeDirectory.length)\n    // console.log('FilteredEmployeeDirectory::employees', this.props.employeeDirectory)\n    if (this.state.filteredEmployeeDirectory.length < 1) {\n      this.setState({\n        filteredEmployeeDirectory: this.props.employeeDirEntries\n      })\n    }\n  }\n\n\n  handleInputChange = event => {\n    this.setState({\n      searchEmp: event.target.value\n    });\n    let searchVal = event.target.value;\n    const filteredList = this.props.employeeDirEntries.filter((item) => {\n      let values = item.name.title + item.name.first + item.name.last + item.dob.date + item.email + item.phone;\n      return values.indexOf(searchVal) !== -1;\n\n    });\n\n    this.setState({\n      filteredEmployeeDirectory: filteredList\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container-md\">\n        <form className=\"form\">\n          <input\n            value={this.state.searchEmp}\n            name=\"searchEmpDirectory\"\n            onChange={event => this.handleInputChange(event)}\n            type=\"text\"\n            placeholder=\"Search in the Directory \"\n          />\n        </form>\n        {\n          // console.log('length',this.state.filteredEmployeeDirectory.length);\n          // console.log('employees',this.state.filteredEmployeeDirectory) \n          this.state.filteredEmployeeDirectory.length > 0 &&\n          <SortedEmployeeDirectory empDir={this.state.filteredEmployeeDirectory} />\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default FilteredEmployeeDirectory;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport API from './util/API'\nimport Header from './components/Header'\nimport FilteredEmployeeDirectory from './components/FilteredEmployeeDirectory'\n\nclass App extends React.Component {\n  state = {\n    employeeDirEntries: [],\n  };\n\n  componentDidMount() {\n    API.getRandomUsers()\n      .then(response => {\n        this.setState({ employeeDirEntries: response.data.results });\n        console.log('respone', response)\n      })\n      .catch(error => console.log(error));\n  }\n  render() {\n    console.log('employeeDirEntries', this.state.employeeDirEntries);\n    return (\n      <div className=\"App\" >\n        <Header />\n        {this.state.employeeDirEntries.length > 0 &&\n\n          <FilteredEmployeeDirectory employeeDirEntries={this.state.employeeDirEntries} />\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}